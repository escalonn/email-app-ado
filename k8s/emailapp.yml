apiVersion: v1
kind: Service
metadata:
  name: email-api
  labels:
    app: email
    role: api
spec:
  type: ClusterIP
  selector:
    app: email
    role: api
  ports:
  - port: 80
---
apiVersion: apps/v1 # different k8s objects someties have surprisingly different apiversion
kind: Deployment # what kind of object to create
metadata: # all k8s have metadata, usually name and labels
  name: email-api
  labels: # labels are targetted by selectors of other objects, or just by kubectl -l filtering
    app: email
    role: api
spec: # every object has a specification
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  minReadySeconds: 5
  selector: # this should match the pod template's labels
    matchLabels:
      app: email
      role: api
  template: # the template for the pods to be created by the replicaset
    metadata:
      labels:
        app: email
        role: api
    spec: # the spec of the template
      containers: # the list of containers in the pod
      - name: api
        image: nicholasescalona/emailapp:1.0
        imagePullPolicy: Always # whether to check for a new image if the pod needs to be recreated
        env:
        - name: CorsOrigins__3
          value: http://localhost:30001
        - name: ConnectionString
          value: PostgresEmailDb
        - name: ConnectionStrings__PostgresEmailDb
          value: Host=email-db;Database=postgres;Username=postgres;Password=Pass@word
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: '64Mi'
            cpu: '100m'
          limits:
            memory: '512Mi'
            cpu: '1000m'
        livenessProbe:
          httpGet:
            port: 80
            path: /health
          periodSeconds: 30
